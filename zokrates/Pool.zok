import "hashes/sha256/512bitPacked" as sha256packed;
const field member_1_h0 = 263561599766550617289250058199814760685;
const field member_1_h1 = 65303172752238645975888084098459749904;
const field member_2_h0 = 296016139321527823785053958024045515449;
const field member_2_h1 = 169585634993304848991863197817116667302;
const field member_3_h0 = 62133134181886812829768166950054220896;
const field member_3_h1 = 160635334427203623512968684759912538624;

def main(private field a, private field b, private field c, private field d) {
    field[2] hash_digest = sha256packed([a, b, c, d]);
    field mut is_member = 0;
    is_member = is_member + if(hash_digest[0] == member_1_h0 && hash_digest[1] == member_1_h1) { 1 } else { 0 };
    is_member = is_member + if(hash_digest[0] == member_2_h0 && hash_digest[1] == member_2_h1) { 1 } else { 0 };
    is_member = is_member + if(hash_digest[0] == member_3_h0 && hash_digest[1] == member_3_h1) { 1 } else { 0 };
    assert(is_member == 1);
    return;
}